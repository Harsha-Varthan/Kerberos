# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import kvstore_pb2 as kvstore__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in kvstore_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DBServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddUser = channel.unary_unary(
                '/kvstore.DBService/AddUser',
                request_serializer=kvstore__pb2.AddUserRequest.SerializeToString,
                response_deserializer=kvstore__pb2.AddUserResponse.FromString,
                _registered_method=True)
        self.FetchUser = channel.unary_unary(
                '/kvstore.DBService/FetchUser',
                request_serializer=kvstore__pb2.FetchUserRequest.SerializeToString,
                response_deserializer=kvstore__pb2.FetchUserResponse.FromString,
                _registered_method=True)
        self.AddService = channel.unary_unary(
                '/kvstore.DBService/AddService',
                request_serializer=kvstore__pb2.AddServiceRequest.SerializeToString,
                response_deserializer=kvstore__pb2.AddServiceResponse.FromString,
                _registered_method=True)
        self.FetchService = channel.unary_unary(
                '/kvstore.DBService/FetchService',
                request_serializer=kvstore__pb2.FetchServiceRequest.SerializeToString,
                response_deserializer=kvstore__pb2.FetchServiceResponse.FromString,
                _registered_method=True)
        self.FetchAllUsers = channel.unary_unary(
                '/kvstore.DBService/FetchAllUsers',
                request_serializer=kvstore__pb2.FetchAllUsersRequest.SerializeToString,
                response_deserializer=kvstore__pb2.FetchAllUsersResponse.FromString,
                _registered_method=True)
        self.DeleteDummyUsers = channel.unary_unary(
                '/kvstore.DBService/DeleteDummyUsers',
                request_serializer=kvstore__pb2.DeleteDummyUsersRequest.SerializeToString,
                response_deserializer=kvstore__pb2.DeleteDummyUsersResponse.FromString,
                _registered_method=True)


class DBServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchAllUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDummyUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DBServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUser,
                    request_deserializer=kvstore__pb2.AddUserRequest.FromString,
                    response_serializer=kvstore__pb2.AddUserResponse.SerializeToString,
            ),
            'FetchUser': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchUser,
                    request_deserializer=kvstore__pb2.FetchUserRequest.FromString,
                    response_serializer=kvstore__pb2.FetchUserResponse.SerializeToString,
            ),
            'AddService': grpc.unary_unary_rpc_method_handler(
                    servicer.AddService,
                    request_deserializer=kvstore__pb2.AddServiceRequest.FromString,
                    response_serializer=kvstore__pb2.AddServiceResponse.SerializeToString,
            ),
            'FetchService': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchService,
                    request_deserializer=kvstore__pb2.FetchServiceRequest.FromString,
                    response_serializer=kvstore__pb2.FetchServiceResponse.SerializeToString,
            ),
            'FetchAllUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchAllUsers,
                    request_deserializer=kvstore__pb2.FetchAllUsersRequest.FromString,
                    response_serializer=kvstore__pb2.FetchAllUsersResponse.SerializeToString,
            ),
            'DeleteDummyUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDummyUsers,
                    request_deserializer=kvstore__pb2.DeleteDummyUsersRequest.FromString,
                    response_serializer=kvstore__pb2.DeleteDummyUsersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kvstore.DBService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('kvstore.DBService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DBService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.DBService/AddUser',
            kvstore__pb2.AddUserRequest.SerializeToString,
            kvstore__pb2.AddUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.DBService/FetchUser',
            kvstore__pb2.FetchUserRequest.SerializeToString,
            kvstore__pb2.FetchUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.DBService/AddService',
            kvstore__pb2.AddServiceRequest.SerializeToString,
            kvstore__pb2.AddServiceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.DBService/FetchService',
            kvstore__pb2.FetchServiceRequest.SerializeToString,
            kvstore__pb2.FetchServiceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchAllUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.DBService/FetchAllUsers',
            kvstore__pb2.FetchAllUsersRequest.SerializeToString,
            kvstore__pb2.FetchAllUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteDummyUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.DBService/DeleteDummyUsers',
            kvstore__pb2.DeleteDummyUsersRequest.SerializeToString,
            kvstore__pb2.DeleteDummyUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class EncryptionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Encrypt = channel.unary_unary(
                '/kvstore.EncryptionService/Encrypt',
                request_serializer=kvstore__pb2.EncryptRequest.SerializeToString,
                response_deserializer=kvstore__pb2.EncryptResponse.FromString,
                _registered_method=True)
        self.Decrypt = channel.unary_unary(
                '/kvstore.EncryptionService/Decrypt',
                request_serializer=kvstore__pb2.DecryptRequest.SerializeToString,
                response_deserializer=kvstore__pb2.DecryptResponse.FromString,
                _registered_method=True)


class EncryptionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Encrypt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Decrypt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EncryptionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Encrypt': grpc.unary_unary_rpc_method_handler(
                    servicer.Encrypt,
                    request_deserializer=kvstore__pb2.EncryptRequest.FromString,
                    response_serializer=kvstore__pb2.EncryptResponse.SerializeToString,
            ),
            'Decrypt': grpc.unary_unary_rpc_method_handler(
                    servicer.Decrypt,
                    request_deserializer=kvstore__pb2.DecryptRequest.FromString,
                    response_serializer=kvstore__pb2.DecryptResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kvstore.EncryptionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('kvstore.EncryptionService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EncryptionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Encrypt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.EncryptionService/Encrypt',
            kvstore__pb2.EncryptRequest.SerializeToString,
            kvstore__pb2.EncryptResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Decrypt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.EncryptionService/Decrypt',
            kvstore__pb2.DecryptRequest.SerializeToString,
            kvstore__pb2.DecryptResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class AuthenticationServiceStub(object):
    """Service definition for the Authentication Server
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/kvstore.AuthenticationService/Login',
                request_serializer=kvstore__pb2.AuthenticateRequest.SerializeToString,
                response_deserializer=kvstore__pb2.LoginResponse.FromString,
                _registered_method=True)


class AuthenticationServiceServicer(object):
    """Service definition for the Authentication Server
    """

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthenticationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=kvstore__pb2.AuthenticateRequest.FromString,
                    response_serializer=kvstore__pb2.LoginResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kvstore.AuthenticationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('kvstore.AuthenticationService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AuthenticationService(object):
    """Service definition for the Authentication Server
    """

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.AuthenticationService/Login',
            kvstore__pb2.AuthenticateRequest.SerializeToString,
            kvstore__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ProtectedServiceStub(object):
    """Service definition for the Protected Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Authenticate = channel.unary_unary(
                '/kvstore.ProtectedService/Authenticate',
                request_serializer=kvstore__pb2.AuthenticateRequest.SerializeToString,
                response_deserializer=kvstore__pb2.AuthResponse.FromString,
                _registered_method=True)
        


class ProtectedServiceServicer(object):
    """Service definition for the Protected Service
    """

    def Authenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProtectedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=kvstore__pb2.AuthenticateRequest.FromString,
                    response_serializer=kvstore__pb2.AuthResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kvstore.ProtectedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('kvstore.ProtectedService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProtectedService(object):
    """Service definition for the Protected Service
    """

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.ProtectedService/Authenticate',
            kvstore__pb2.AuthenticateRequest.SerializeToString,
            kvstore__pb2.AuthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class TicketGrantingServiceStub(object):
    """Define the response message for the Authenticate service

    Service definition for the Ticket Granting Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessTicketGrantingRequest = channel.unary_unary(
                '/kvstore.TicketGrantingService/ProcessTicketGrantingRequest',
                request_serializer=kvstore__pb2.TicketGrantingRequest.SerializeToString,
                response_deserializer=kvstore__pb2.TicketGrantingResponse.FromString,
                _registered_method=True)


class TicketGrantingServiceServicer(object):
    """Define the response message for the Authenticate service

    Service definition for the Ticket Granting Service
    """

    def ProcessTicketGrantingRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TicketGrantingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessTicketGrantingRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessTicketGrantingRequest,
                    request_deserializer=kvstore__pb2.TicketGrantingRequest.FromString,
                    response_serializer=kvstore__pb2.TicketGrantingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kvstore.TicketGrantingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('kvstore.TicketGrantingService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TicketGrantingService(object):
    """Define the response message for the Authenticate service

    Service definition for the Ticket Granting Service
    """

    @staticmethod
    def ProcessTicketGrantingRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.TicketGrantingService/ProcessTicketGrantingRequest',
            kvstore__pb2.TicketGrantingRequest.SerializeToString,
            kvstore__pb2.TicketGrantingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class KDCServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Authenticate = channel.unary_unary(
                '/kvstore.KDCService/Authenticate',
                request_serializer=kvstore__pb2.AuthenticateRequest.SerializeToString,
                response_deserializer=kvstore__pb2.AuthenticateResponse.FromString,
                _registered_method=True)
        self.GetServiceTicket = channel.unary_unary(
                '/kvstore.KDCService/GetServiceTicket',
                request_serializer=kvstore__pb2.ServiceTicketRequest.SerializeToString,
                response_deserializer=kvstore__pb2.ServiceTicketResponse.FromString,
                _registered_method=True)


class KDCServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Authenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceTicket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KDCServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=kvstore__pb2.AuthenticateRequest.FromString,
                    response_serializer=kvstore__pb2.AuthenticateResponse.SerializeToString,
            ),
            'GetServiceTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceTicket,
                    request_deserializer=kvstore__pb2.ServiceTicketRequest.FromString,
                    response_serializer=kvstore__pb2.ServiceTicketResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kvstore.KDCService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('kvstore.KDCService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class KDCService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.KDCService/Authenticate',
            kvstore__pb2.AuthenticateRequest.SerializeToString,
            kvstore__pb2.AuthenticateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetServiceTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.KDCService/GetServiceTicket',
            kvstore__pb2.ServiceTicketRequest.SerializeToString,
            kvstore__pb2.ServiceTicketResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
